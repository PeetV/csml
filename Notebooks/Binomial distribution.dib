#!markdown

# Binomial distribution

The Binomial distribution is used to model the probability of the number of successes that occur during a number of experiments.

#!csharp

#i "nuget:/Users/peet/Sources/csml/CsML/bin/Release"
#r "nuget:CsML,*-*"
using CsML;
using CsML.Probability;

#!csharp

#r "nuget: Plotly.NET.CSharp,*-*"
using Plotly.NET.CSharp;

#!csharp

void PlotIntPMF(ProbabilityMassFunction<int> pmf)
{
    Chart.Line<int, double, string>(
        x: pmf.hypotheses, 
        y: pmf.probabilities
    )
        .WithXAxisStyle<double, double, string>(
            Title: Plotly.NET.Title.init("Hypotheses"))
        .WithYAxisStyle<double, double, string>(
            Title: Plotly.NET.Title.init("Probability"))
        .Show();
}

#!markdown

### Medication side effects

Assume it is known that 5% of adults who take a certain medication experience negative side effects. If the medication is provided to 100 people, what is the probility that more than 5, 10 and 15 people will experience side effects?

#!csharp

int[] ks = Enumerable.Range(1, 101).ToArray();
var pmf = ProbabilityMassFunction<int>.FromBinomial(100, ks, 0.05);
PlotIntPMF(pmf);

#!csharp

pmf.SumProbabilities(6, 100)

#!csharp

pmf.SumProbabilities(10, 100)

#!csharp

pmf.SumProbabilities(15, 100)

#!markdown

### Coin tosses

See [Think Bayes](http://allendowney.github.io/ThinkBayes2/chap04.html)

#!csharp

ks = Enumerable.Range(1, 251).ToArray();
pmf = ProbabilityMassFunction<int>.FromBinomial(250, ks, 0.5);
PlotIntPMF(pmf);

#!csharp

pmf.HighestProbability()

#!csharp

double[] hypos = Enumerable.Range(0, 101).Select(x => (double)x / 100).ToArray();
var coinbal = new ProbabilityMassFunction<double>(hypos);
coinbal.zipped[0..3]

#!csharp

double[] likelihoodHeads = hypos;
double[] likelihoodTails = hypos.Select(x => 1 - x).ToArray();
likelihoodTails[0..3]

#!csharp

string[] data = Enumerable.Repeat("H", 140).Concat(Enumerable.Repeat("T", 110)).ToArray();
data[0..3]

#!csharp

foreach (var item in data)
{
    if (item == "H")
        coinbal.Update(likelihoodHeads);
    else coinbal.Update(likelihoodTails);
    coinbal.Normalise();
}
Chart.Line<double, double, string>(
    x: coinbal.hypotheses, 
    y: coinbal.probabilities
)
    .WithXAxisStyle<double, double, string>(
        Title: Plotly.NET.Title.init("Hypotheses"))
    .WithYAxisStyle<double, double, string>(
        Title: Plotly.NET.Title.init("Probability"))
    .Show();
